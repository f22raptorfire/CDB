/* Generated By:JJTree&JavaCC: Do not edit this line. CdbParserConstants.java */
package wci.frontend;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface CdbParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int SINGLE_LINE_COMMENT = 6;
  /** RegularExpression Id. */
  int MULTI_LINE_COMMENT = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int ELSE = 11;
  /** RegularExpression Id. */
  int TRUE = 12;
  /** RegularExpression Id. */
  int FALSE = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int FOR = 15;
  /** RegularExpression Id. */
  int DO = 16;
  /** RegularExpression Id. */
  int PRINT = 17;
  /** RegularExpression Id. */
  int PRINTLN = 18;
  /** RegularExpression Id. */
  int DATABASE = 19;
  /** RegularExpression Id. */
  int PROMPT = 20;
  /** RegularExpression Id. */
  int SHOW = 21;
  /** RegularExpression Id. */
  int ADD = 22;
  /** RegularExpression Id. */
  int COLON = 23;
  /** RegularExpression Id. */
  int AT = 24;
  /** RegularExpression Id. */
  int EQUALS = 25;
  /** RegularExpression Id. */
  int EE = 26;
  /** RegularExpression Id. */
  int NE = 27;
  /** RegularExpression Id. */
  int LT = 28;
  /** RegularExpression Id. */
  int LE = 29;
  /** RegularExpression Id. */
  int GT = 30;
  /** RegularExpression Id. */
  int GE = 31;
  /** RegularExpression Id. */
  int COMMA = 32;
  /** RegularExpression Id. */
  int DOT = 33;
  /** RegularExpression Id. */
  int SEMICOLON = 34;
  /** RegularExpression Id. */
  int PLUS = 35;
  /** RegularExpression Id. */
  int MINUS = 36;
  /** RegularExpression Id. */
  int STAR = 37;
  /** RegularExpression Id. */
  int SLASH = 38;
  /** RegularExpression Id. */
  int QUOTE = 39;
  /** RegularExpression Id. */
  int DOUBLE_QUOTE = 40;
  /** RegularExpression Id. */
  int LEFT_PAREN = 41;
  /** RegularExpression Id. */
  int RIGHT_PAREN = 42;
  /** RegularExpression Id. */
  int LEFT_BRACE = 43;
  /** RegularExpression Id. */
  int RIGHT_BRACE = 44;
  /** RegularExpression Id. */
  int AND = 45;
  /** RegularExpression Id. */
  int OR = 46;
  /** RegularExpression Id. */
  int UNDERSCORE = 47;
  /** RegularExpression Id. */
  int IDENTIFIER = 48;
  /** RegularExpression Id. */
  int STRING_LIT = 49;
  /** RegularExpression Id. */
  int INTEGER = 50;
  /** RegularExpression Id. */
  int REAL = 51;
  /** RegularExpression Id. */
  int LETTER = 52;
  /** RegularExpression Id. */
  int DIGIT = 53;
  /** RegularExpression Id. */
  int SIGN = 54;
  /** RegularExpression Id. */
  int UNSIGNED_NUMBER = 55;
  /** RegularExpression Id. */
  int WHOLE = 56;
  /** RegularExpression Id. */
  int FRACTION = 57;
  /** RegularExpression Id. */
  int EXPONENT = 58;
  /** RegularExpression Id. */
  int EOL = 59;
  /** RegularExpression Id. */
  int ERROR = 60;

  /** Lexical state. */
  int DEFAULT = 0;
  /** Lexical state. */
  int IN_MULTI_LINE_COMMENT = 1;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\r\"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\\n\"",
    "<SINGLE_LINE_COMMENT>",
    "\"/*\"",
    "<token of kind 8>",
    "\"*/\"",
    "\"IF\"",
    "\"ELSE\"",
    "\"TRUE\"",
    "\"FALSE\"",
    "\"WHILE\"",
    "\"FOR\"",
    "\"DO\"",
    "\"PRINT\"",
    "\"PRINTLN\"",
    "\"DATABASE\"",
    "\"PROMPT\"",
    "\"SHOW\"",
    "\"ADD\"",
    "\":\"",
    "\"@\"",
    "\"=\"",
    "\"==\"",
    "\"!=\"",
    "\"<\"",
    "\"<=\"",
    "\">\"",
    "\">=\"",
    "\",\"",
    "\".\"",
    "\";\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"&&\"",
    "\"||\"",
    "\"_\"",
    "<IDENTIFIER>",
    "<STRING_LIT>",
    "<INTEGER>",
    "<REAL>",
    "<LETTER>",
    "<DIGIT>",
    "<SIGN>",
    "<UNSIGNED_NUMBER>",
    "<WHOLE>",
    "<FRACTION>",
    "<EXPONENT>",
    "<EOL>",
    "<ERROR>",
  };

}
